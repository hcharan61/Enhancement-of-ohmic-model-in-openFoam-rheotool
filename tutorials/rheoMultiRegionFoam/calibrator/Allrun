#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions


if [ "$#" -ne 1 ]; then
    echo "ERROR: Illegal number of parameters"
    echo "Usage is: ./Allrun n" 
    echo "where n is the number of processors to be used"
    exit 1
fi
  

(cd ./calibrator && ./Allrun)

runApplication blockMesh 

runApplication mergeMeshes ./ ./calibrator -overwrite

runApplication createPatch -overwrite

runApplication splitMeshRegions -overwrite

cp -rf constant/polymer.back/constitutiveProperties    constant/polymer/constitutiveProperties
cp -rf constant/polymer.back/electricProperties    constant/polymer/electricProperties
cp -rf constant/polymer.back/g    constant/polymer/g
cp -rf constant/polymer.back/thermoProperties    constant/polymer/thermoProperties
cp -rf constant/polymer.back/radiationProperties    constant/polymer/radiationProperties

cp -rf constant/calibrator.back/thermoProperties    constant/calibrator/thermoProperties
cp -rf constant/calibrator.back/radiationProperties    constant/calibrator/radiationProperties
  
 
if [ "$1" -gt 1 ]; then
 foamDictionary -entry "numberOfSubdomains" -set $1 system/decomposeParDict
 foamDictionary -entry "simpleCoeffs/n" -set "( 1 $1 1 )" system/decomposeParDict
 runApplication decomposePar -allRegions -dict system/decomposeParDict  
 runParallel rheoMultiRegionFoam
 runApplication reconstructPar -latestTime -allRegions 
else
 runApplication rheoMultiRegionFoam
fi

runApplication paraFoam -touchAll

runApplication -s calibrator postProcess -func sampleDict -latestTime -region "calibrator"
runApplication -s polymer postProcess -func sampleDict -latestTime -region "polymer"
 
