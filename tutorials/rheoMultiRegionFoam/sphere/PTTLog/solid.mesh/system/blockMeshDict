/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Website:  https://openfoam.org                  |
|   \\  /    A nd           | Version:  9                                     |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

//----GEO
 
z0 -1;
z1 0;

//---MESH
//-N
nx0_1 35;
nx1_2 35;
nx2_3 35;

ny0_7 40;

//-G
gx0_1 0.5; 
gx1_2 1;
gx2_3 1;

gy0_7_A 5; gy0_7_B 0.75;
 

vertices
(
   (-1 0 $z0)
   (-0.6000 0 $z0)
   (0 0 $z0) //2
   (0.6000 0 $z0)
   (1 0 $z0) //4
   
   (0.7071067812 0.7071067812 $z0)
   (0 1 $z0) //6
   (-0.7071067812 0.7071067812 $z0)
   
   (-0.5 0.5 $z0)
   (0 0.6000 $z0) //9
   (0.5 0.5 $z0)
   
   //-----------------
   
   (-1 0 $z1)
   (-0.6000 0 $z1)
   (0 0 $z1)
   (0.6000 0 $z1)
   (1 0 $z1)
   
   (0.7071067812 0.7071067812 $z1)
   (0 1 $z1)
   (-0.7071067812 0.7071067812 $z1)
   
   (-0.5 0.5 $z1)
   (0 0.6000 $z1)
   (0.5 0.5 $z1)
   
);

blocks
(
    hex (1 8 7 0 12 19 18 11) sphere ($ny0_7 $nx0_1 1) 
    simpleGrading 
    (                    
     (
       (0.5 0.6 $gy0_7_A)    
       (0.5 0.4 $gy0_7_B)    
     )
     $gx0_1  
     1 
    ) //0
    
    
     
    hex (8 9 6 7 19 20 17 18) sphere ($nx1_2 $nx0_1 1) simpleGrading ($gx1_2 $gx0_1 1) //1  
    
    hex (9 10 5 6 20 21 16 17) sphere ($nx2_3 $nx0_1 1) simpleGrading ($gx2_3 $gx0_1 1) //2 
      
    hex (3 4 5 10 14 15 16 21) sphere ($nx0_1 $ny0_7 1) 
    simpleGrading 
    (
     $gx0_1               
     (
       (0.5 0.6 $gy0_7_A)    
       (0.5 0.4 $gy0_7_B)    
     )
     1 
    ) //3
    
    hex (1 2 9 8 12 13 20 19) sphere ($nx1_2 $ny0_7 1) 
    simpleGrading 
    (
     $gx1_2                 
     (
       (0.5 0.6 $gy0_7_A)    
       (0.5 0.4 $gy0_7_B)    
     )
     1 
    ) //4
    
    
    
    hex (2 3 10 9 13 14 21 20) sphere ($nx2_3 $ny0_7 1) 
    simpleGrading 
    (
     $gx2_3               
     (
       (0.5 0.6 $gy0_7_A)    
       (0.5 0.4 $gy0_7_B)    
     )
     1 
    ) //5
);

edges
(
  arc 0 7  (-0.9238795325 0.3826834324 $z0)
  arc 7 6  (-0.3826834324 0.9238795325 $z0)
  arc 6 5  (0.3826834324 0.9238795325 $z0)    
  arc 5 4  (0.9238795325 0.3826834324 $z0)
  
  arc 3 10 (0.575735082 0.25 $z0)
  arc 9 10 (0.25 0.575735082 $z0)
  arc 1 8 (-0.575735082 0.25 $z0)
  arc 8 9 (-0.25 0.575735082 $z0)
  
  //-----    
  
  arc 11 18  (-0.9238795325 0.3826834324 $z1)
  arc 18 17  (-0.3826834324 0.9238795325 $z1)
  arc 17 16  (0.3826834324 0.9238795325 $z1)    
  arc 16 15  (0.9238795325 0.3826834324 $z1) 
  
  arc 14 21 (0.575735082 0.25 $z1)
  arc 20 21 (0.25 0.575735082 $z1)
  arc 12 19 (-0.575735082 0.25 $z1)
  arc 19 20 (-0.25 0.575735082 $z1)
  
 
);

boundary
(

    
    walls.solid
    {
        type wall;
        faces
        (
          (0 7 18 11)
          (7 6 17 18)
          (6 5 16 17)
          (5 4 15 16)
        );
    }
     
    back
    {
        type empty;
        faces
        (
          (0 1 8 7)
          (8 9 6 7)
          (9 10 5 6)
          (3 4 5 10)
          (1 2 9 8)
          (2 3 10 9)
        );
    }
    
    front 
    {
        type empty;
        faces
        (
          (11 12 19 18)
          (19 20 17 18)
          (20 21 16 17)
          (14 15 16 21)
          (12 13 20 19)
          (13 14 21 20)
        );
    }
     
        
);

mergePatchPairs
(
);

// ************************************************************************* //
