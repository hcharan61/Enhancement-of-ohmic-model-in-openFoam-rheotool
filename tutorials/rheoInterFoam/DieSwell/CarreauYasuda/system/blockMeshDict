/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Website:  https://openfoam.org                  |
|   \\  /    A nd           | Version:  9                                     |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * /

convertToMeters 1;

vertices
(
  (-35 0 0)
  (-5 0 0)
  (0 0 0)
  (25 0 0)
  (40 0 0) 
  (40 1 0)
  (40 4 0)
  (25 4 0) 
  (0 4 0)
  (-2.5 4 0)
  (-2.5 1 0)
  (-35 1 0)
  (-5 1 0)
  (0 1 0)
  (25 1 0)   
  
  (-35 0 1)
  (-5 0 1)
  (0 0 1)
  (25 0 1)
  (40 0 1)  
  (40 1 1)
  (40 4 1)
  (25 4 1)  
  (0 4 1)
  (-2.5 4 1)
  (-2.5 1 1)  
  (-35 1 1)
  (-5 1 1)
  (0 1 1)
  (25 1 1)   
  
);

blocks
(
	hex (0 1 12 11 15 16 27 26) (50 15 1) simpleGrading (.07 0.25 1) 
	hex (1 2 13 12 16 17 28 27) (80 15 1) simpleGrading (.274 0.25 1)   
	hex (2 3 14 13 17 18 29 28) (160 15 1) simpleGrading (14.6 0.25 1) 
	hex (13 14 7 8 28 29 22 23 ) (160 40 1) simpleGrading (14.6 4.95 1)
	hex (10 13 8 9 25 28 23 24) (37 40 1) simpleGrading (.2425 4.95 1) 
);

edges
(
);

boundary
(
    inlet
     {
      type patch;
      faces
      (
         (0 11 26 15)          
      );
     }
     
    wallIn
     {
      type wall;
      faces
      (
         (11 12 27 26)
         (12 13 28 27)          
      );
     }
     
    wallOut
     {
      type wall;
      faces
      (
         (10 13 28 25)       
      );
     }  
     
    atmosphere
     {
      type patch;
      faces
      (
         (10 9 24 25)  
         (9 8 23 24)    
         (8 7 22 23)
      
      );
     }
     
    outlet
     {
      type patch;
      faces
      (
         (3 14 29 18)
         (14 7 22 29)   
      );
     }
    
    symmetry
     {
      type symmetryPlane;
      faces
      (
         (0 1 16 15)
         (1 2 17 16)
         (2 3 18 17)
      );
     }
        
 
); 
 
//************************
