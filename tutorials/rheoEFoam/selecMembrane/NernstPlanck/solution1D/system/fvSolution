/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Website:  https://openfoam.org                  |
|   \\  /    A nd           | Version:  9                                     |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

coupledSolvers
{
  Uptau
  {
    solveCoupledUp false;
    solveCoupledTau false;
    
    saveSystem false;
  }
  
  ciPsi
  {
    solveWithUptau    false;
     
    saveSystem true;
    robustSumCheck  true;
    updatePrecondFrequency 1; 
    updateMatrixCoeffs true;   
  }
}

solvers
{
    "(p|psi|U)"
    {
        solver           PCG;
        preconditioner   DIC;
        tolerance        1e-10;
        relTol           0.;
        minIter          0;
        maxIter          800;
        
    }

    "(ci)"
    {

        solver           PBiCG;
        preconditioner
        {
            preconditioner DILU;
        }

        tolerance         1e-10;
        relTol            0.;
        minIter           0;
        maxIter           1000;
    }
 
}

electricControls
{
  nIterPNP         2;
  
  phiEEqn
   {
      residuals 1e-7;
      maxIter      1;
   }

  psiEqn
   {
      residuals 1e-7;
      maxIter      1;
   }
   
   ciEqn
   {
      residuals 1e-7;
      maxIter      1;
   }
}

PostProcessing
{
 
functions
 (
 
  JMonitor
   {
     funcType          calcJpatch;
     ListOfPatches
      (
        "membrane"
        "reservoir"
      );                        // List of patches for where to compute J
     enabled           true;
     evaluateInterval  1000;   // Time-steps between outputs
   }
   
 );
 
}

SIMPLE
{
    solveFluid      false;
     
    nInIter         1;
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;

    residualControl
    {
       
    }
}

relaxationFactors
{
    
}

// ************************************************************************* //
