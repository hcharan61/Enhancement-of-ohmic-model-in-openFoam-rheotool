/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Website:  https://openfoam.org                  |
|   \\  /    A nd           | Version:  9                                     |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      constitutiveProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

/*
The parameters are for a multimode XPomPom model in uniextensional flow. 
They reproduce the curve for \dot{gamma} = 0.38 s-1 in Fig 1a of:

Wilco M.H. Verbeeten, Gerrit W.M. Peters, Frank P.T. Baaijens, Viscoelastic analysis of complex polymer melt flows using
the eXtended Pom–Pom model, J. Non-Newtonian Fluid Mech. 108 (2002) 301–326.
  
*/

parameters
{              
        type multiMode;
        
        models
        (
            M1
            {
                type             XPomPom;

                rho              rho [1 -3 0 0 0 0 0] 1.;
                etaS             etaS [1 -1 -1 0 0 0 0] .0;
                etaP             etaP [1 -1 -1 0 0 0 0] 280.4345676;             
               
                lambdaB          lambdaB [0 0 1 0 0 0 0] 0.0038946;
                lambdaS          lambdaS [0 0 1 0 0 0 0] 0.000556371;
                alpha            alpha [0 0 0 0 0 0 0] .3;
                q                q [0 0 0 0 0 0 0] 1;
                n                n [0 0 0 0 0 0 0] 0;
                
                lambda           lambda [0 0 1 0 0 0 0] 0.0038946; // Dummy equal to lambdaB
               
                stabilization    coupling;              

            }   
            M2
            {
                type             XPomPom;

                rho              rho [1 -3 0 0 0 0 0] 1.;
                etaS             etaS [1 -1 -1 0 0 0 0] .0;
                etaP             etaP [1 -1 -1 0 0 0 0] 810.420300;                           
                lambdaB          lambdaB [0 0 1 0 0 0 0] 0.0513900;
                
                lambdaS          lambdaS [0 0 1 0 0 0 0] 0.010278;
                alpha            alpha [0 0 0 0 0 0 0] .3;
                q                q [0 0 0 0 0 0 0] 1;
                n                n [0 0 0 0 0 0 0] 0;
                
                lambda          lambda [0 0 1 0 0 0 0] 0.0513900; // Dummy equal to lambdaB                
               
                stabilization    coupling;         
            } 
            M3
            {
                type             XPomPom;

                rho              rho [1 -3 0 0 0 0 0] 1.;
                etaS             etaS [1 -1 -1 0 0 0 0] .0;
                etaP             etaP [1 -1 -1 0 0 0 0] 1678.6356600;             
               
                lambdaB          lambdaB [0 0 1 0 0 0 0] 0.5034900;
                lambdaS          lambdaS [0 0 1 0 0 0 0] 0.16783 ;
                alpha            alpha [0 0 0 0 0 0 0] .15;
                q                q [0 0 0 0 0 0 0] 2;
                n                n [0 0 0 0 0 0 0] 0;
                
                lambda          lambda [0 0 1 0 0 0 0] 0.5034900; // Dummy equal to lambdaB 
               
                stabilization    coupling;         
            } 
            M4
            {
                type             XPomPom;

                rho              rho [1 -3 0 0 0 0 0] 1.;
                etaS             etaS [1 -1 -1 0 0 0 0] .0;
                etaP             etaP [1 -1 -1 0 0 0 0] 1381.0028800;             
               
                lambdaB          lambdaB [0 0 1 0 0 0 0] 4.5911000;
                lambdaS          lambdaS [0 0 1 0 0 0 0] 4.173727273;
                alpha            alpha [0 0 0 0 0 0 0] .03;
                q                q [0 0 0 0 0 0 0] 10;
                n                n [0 0 0 0 0 0 0] 0;
                
                lambda          lambda [0 0 1 0 0 0 0] 4.5911000; // Dummy equal to lambdaB                 
               
                stabilization    coupling;         
            } 
            
        );            
}

rheoTestFoamParameters
{
              // Ramp mode (true) or transient mode (false)
                ramp 		 false; 

              // This tensor multiplied by gammaEpsilonDot gives nabla(U)
                gradU            ( 1.    0.    0.
                                   0.   -0.5   0.
                                   0.    0.   -0.5); 

              // Either strain rate or extensional rate (1/s) list (if ramp=false, only the first value in the list is read) 
                gammaEpsilonDotL 
                  (     
                        0.38
			
                
                  );
}
// ************************************************************************* //
